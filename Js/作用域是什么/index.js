// 作用域是什么？
// 我们可以把作用域理解为一套规则，这套规则用于管理引擎执行代码时如何对当前作用域以及嵌套的子作用域根据标识符进行变量的查找。
// 如果查找的目的是对变量进行赋值，那么会进行LHS查找；如果是获取变量的值，那么会进行RHS查找。=操作符和调用函数时传入的参数操作都会进行LHS查询

// 传统编译:
// 1.分词/词法分析：把字符分解为有意义的单元组
// 2.语法分析：用单元组生成AST（抽象语法树）
// 3.代码生成：用AST生成可执行的代码

// 查找分为LHS（赋值操作符的左侧）和RHS（非赋值操作符的左侧）

// var a = 2;
// JS引擎会在代码执行前进行编译
// 1. 在其作用域声明一个变量a
// 2. 对a进行LHS查询并赋值

// LHS和RHS都会从当前作用域开始，如果当前作用域没有查询到就从上级作用域查询，知道最顶层，无论有没有找到都停止查询

// 不成功的RHS引用会抛出referenceError，不成功的LHS会创建一个新变量（非严格模式），或者抛出referenceError(严格模式)




